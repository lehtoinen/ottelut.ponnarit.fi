---
import { groupBy } from "ramda";

import type { Team } from "../../types/Team";

import CollapsibleContainer from "./CollapsibleContainer.astro";
import TeamCheckbox from "./TeamCheckbox.astro";

type Props = {
  teams: Team[];
};

const categoryMap: Record<string, string> = {
  M: "Miehet",
  N: "Naiset",
  P: "Pojat",
  T: "TytÃ¶t",
};

const { teams } = Astro.props;
const groupTeamsByCategory = groupBy((team: Team) => {
  const prefix = team.ageGroup.charAt(0);
  return categoryMap[prefix] ?? "unknown";
});

const teamsByCategory = groupTeamsByCategory(teams);
---

<div class="teams-menu">
  {
    Object.entries(teamsByCategory).map(([category, teamsInCategory = []]) => {
      if (teamsInCategory.length === 0) return;

      const categoryHeading = `<strong>${category}</strong>`;

      if (teamsInCategory.length < 10) {
        return (
          <CollapsibleContainer heading={categoryHeading}>
            {teamsInCategory.map((team) => (
              <TeamCheckbox team={team} />
            ))}
          </CollapsibleContainer>
        );
      }

      const teamsByAgeGroup = groupBy((team: Team) => team.ageGroup)(
        teamsInCategory
      );

      return (
        <CollapsibleContainer heading={categoryHeading}>
          {Object.entries(teamsByAgeGroup).map(
            ([ageGroup, teamsInAgeGroup]) => {
              if (!teamsInAgeGroup) return;
              if (teamsInAgeGroup.length === 1)
                return <TeamCheckbox team={teamsInAgeGroup[0]} />;

              const groupHeading = ageGroup;

              return (
                <CollapsibleContainer heading={groupHeading}>
                  {teamsInAgeGroup.map((team) => (
                    <TeamCheckbox team={team} />
                  ))}
                </CollapsibleContainer>
              );
            }
          )}
        </CollapsibleContainer>
      );
    })
  }
</div>

<style>
  .teams-menu {
    min-width: 260px;
  }
</style>
