---
import { isValid } from "date-fns";

import { getAllMatchesForClub, getAllTeamsForClub } from "../../api/torneoPal";

import Fixture from "../Fixture.astro";
import TeamsMenu from "./TeamsMenu.astro";

const teams = await getAllTeamsForClub();
const matches = await getAllMatchesForClub();
---

<fixture-list>
  <TeamsMenu teams={teams} />
  <div>
    {
      matches
        .filter(({ date }) => isValid(date))
        .map((match) => {
          const teamId = teams.find((team) =>
            [match.homeTeamId, match.awayTeamId].includes(team.id)
          )?.id;

          return (
            <div data-team-id={teamId}>
              <Fixture fixture={match} />
            </div>
          );
        })
    }
  </div>
</fixture-list>

<script>
  import {
    getTeamFilterState,
    setTeamFilterState,
  } from "../../state/teamFilterState";

  class FixtureList extends HTMLElement {
    constructor() {
      super();

      const checkboxes = this.querySelectorAll("input");

      const init = () => {
        const filterState = getTeamFilterState();
        checkboxes.forEach(
          (checkbox) => (checkbox.checked = filterState[checkbox.id])
        );
        updateFixtureList();
      };

      const toggleAllFixtures = (visible: boolean) => {
        const allFixtures: NodeListOf<HTMLElement> =
          this.querySelectorAll("[data-team-id]");
        allFixtures.forEach(
          (fixture) => (fixture.style.display = visible ? "" : "none")
        );
      };

      const updateFixtureList = () => {
        const filterState = getTeamFilterState();

        if (Object.values(filterState).every((value) => !value)) {
          toggleAllFixtures(true);
          return;
        }

        toggleAllFixtures(false);
        Object.entries(filterState).forEach(([key, value]) => {
          if (!value) return;

          const teamFixtures: NodeListOf<HTMLElement> = this.querySelectorAll(
            `[data-team-id="${key}"]`
          );
          teamFixtures.forEach((fixture) => (fixture.style.display = ""));
        });
      };

      checkboxes.forEach((checkbox) =>
        checkbox.addEventListener("click", () => {
          const updatedState = Object.values(checkboxes).reduce(
            (state, input) =>
              input.checked ? { ...state, [input.id]: true } : state,
            {}
          );

          setTeamFilterState(updatedState);
          updateFixtureList();
        })
      );

      init();
    }
  }

  customElements.define("fixture-list", FixtureList);
</script>

<style>
  fixture-list {
    display: flex;
    gap: 30px;
  }

  @media (max-width: 720px) {
    fixture-list {
      display: block;
    }
  }
</style>
